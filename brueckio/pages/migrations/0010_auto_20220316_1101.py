# Generated by Django 3.2.12 on 2022-03-16 11:01

from django.db import migrations, models
import django.db.models.deletion
import pages.blocks
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('pages', '0009_auto_20211008_1230'),
    ]

    operations = [
        migrations.AlterField(
            model_name='contentpage',
            name='content',
            field=wagtail.fields.StreamField([('heading', wagtail.blocks.StructBlock([('heading', wagtail.blocks.ChoiceBlock(choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], label='Header Size')), ('text', wagtail.blocks.CharBlock(label='Text', max_length=50))])), ('rich_text', pages.blocks.RichTextBlock()), ('lead_text', pages.blocks.LeadTextBlock()), ('contact_teaser', pages.blocks.ContactTeaserBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.blocks.CharBlock()), ('is_circle', wagtail.blocks.BooleanBlock(label='Show as a circle?', required=False))])), ('cv', wagtail.blocks.StructBlock([('when', wagtail.blocks.CharBlock()), ('what', wagtail.blocks.RichTextBlock())])), ('key_facts', wagtail.blocks.StructBlock([('facts', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.blocks.ChoiceBlock(choices=[('fab fa-xing-square', 'Xing'), ('fa fa-external-link-square-alt', 'Website'), ('fa fa-microchip', 'Technologies')])), ('fact', wagtail.blocks.CharBlock(required=True))], icon='fa-check')))])), ('column_one_third', wagtail.blocks.StructBlock([('first', wagtail.blocks.StreamBlock([('heading', wagtail.blocks.StructBlock([('heading', wagtail.blocks.ChoiceBlock(choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], label='Header Size')), ('text', wagtail.blocks.CharBlock(label='Text', max_length=50))])), ('rich_text', pages.blocks.RichTextBlock()), ('lead_text', pages.blocks.LeadTextBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.blocks.CharBlock()), ('is_circle', wagtail.blocks.BooleanBlock(label='Show as a circle?', required=False))]))], label='Left')), ('second', wagtail.blocks.StreamBlock([('heading', wagtail.blocks.StructBlock([('heading', wagtail.blocks.ChoiceBlock(choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], label='Header Size')), ('text', wagtail.blocks.CharBlock(label='Text', max_length=50))])), ('rich_text', pages.blocks.RichTextBlock()), ('lead_text', pages.blocks.LeadTextBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.blocks.CharBlock()), ('is_circle', wagtail.blocks.BooleanBlock(label='Show as a circle?', required=False))]))], label='Right'))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='projectoverviewpage',
            name='content',
            field=wagtail.fields.StreamField([('heading', wagtail.blocks.StructBlock([('heading', wagtail.blocks.ChoiceBlock(choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], label='Header Size')), ('text', wagtail.blocks.CharBlock(label='Text', max_length=50))])), ('rich_text', pages.blocks.RichTextBlock()), ('lead_text', pages.blocks.LeadTextBlock()), ('contact_teaser', pages.blocks.ContactTeaserBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.blocks.CharBlock()), ('is_circle', wagtail.blocks.BooleanBlock(label='Show as a circle?', required=False))])), ('cv', wagtail.blocks.StructBlock([('when', wagtail.blocks.CharBlock()), ('what', wagtail.blocks.RichTextBlock())])), ('key_facts', wagtail.blocks.StructBlock([('facts', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.blocks.ChoiceBlock(choices=[('fab fa-xing-square', 'Xing'), ('fa fa-external-link-square-alt', 'Website'), ('fa fa-microchip', 'Technologies')])), ('fact', wagtail.blocks.CharBlock(required=True))], icon='fa-check')))])), ('column_one_third', wagtail.blocks.StructBlock([('first', wagtail.blocks.StreamBlock([('heading', wagtail.blocks.StructBlock([('heading', wagtail.blocks.ChoiceBlock(choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], label='Header Size')), ('text', wagtail.blocks.CharBlock(label='Text', max_length=50))])), ('rich_text', pages.blocks.RichTextBlock()), ('lead_text', pages.blocks.LeadTextBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.blocks.CharBlock()), ('is_circle', wagtail.blocks.BooleanBlock(label='Show as a circle?', required=False))]))], label='Left')), ('second', wagtail.blocks.StreamBlock([('heading', wagtail.blocks.StructBlock([('heading', wagtail.blocks.ChoiceBlock(choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], label='Header Size')), ('text', wagtail.blocks.CharBlock(label='Text', max_length=50))])), ('rich_text', pages.blocks.RichTextBlock()), ('lead_text', pages.blocks.LeadTextBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.blocks.CharBlock()), ('is_circle', wagtail.blocks.BooleanBlock(label='Show as a circle?', required=False))]))], label='Right'))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='projectpage',
            name='content',
            field=wagtail.fields.StreamField([('heading', wagtail.blocks.StructBlock([('heading', wagtail.blocks.ChoiceBlock(choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], label='Header Size')), ('text', wagtail.blocks.CharBlock(label='Text', max_length=50))])), ('rich_text', pages.blocks.RichTextBlock()), ('lead_text', pages.blocks.LeadTextBlock()), ('contact_teaser', pages.blocks.ContactTeaserBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.blocks.CharBlock()), ('is_circle', wagtail.blocks.BooleanBlock(label='Show as a circle?', required=False))])), ('cv', wagtail.blocks.StructBlock([('when', wagtail.blocks.CharBlock()), ('what', wagtail.blocks.RichTextBlock())])), ('key_facts', wagtail.blocks.StructBlock([('facts', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.blocks.ChoiceBlock(choices=[('fab fa-xing-square', 'Xing'), ('fa fa-external-link-square-alt', 'Website'), ('fa fa-microchip', 'Technologies')])), ('fact', wagtail.blocks.CharBlock(required=True))], icon='fa-check')))])), ('column_one_third', wagtail.blocks.StructBlock([('first', wagtail.blocks.StreamBlock([('heading', wagtail.blocks.StructBlock([('heading', wagtail.blocks.ChoiceBlock(choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], label='Header Size')), ('text', wagtail.blocks.CharBlock(label='Text', max_length=50))])), ('rich_text', pages.blocks.RichTextBlock()), ('lead_text', pages.blocks.LeadTextBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.blocks.CharBlock()), ('is_circle', wagtail.blocks.BooleanBlock(label='Show as a circle?', required=False))]))], label='Left')), ('second', wagtail.blocks.StreamBlock([('heading', wagtail.blocks.StructBlock([('heading', wagtail.blocks.ChoiceBlock(choices=[('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')], label='Header Size')), ('text', wagtail.blocks.CharBlock(label='Text', max_length=50))])), ('rich_text', pages.blocks.RichTextBlock()), ('lead_text', pages.blocks.LeadTextBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.blocks.CharBlock()), ('is_circle', wagtail.blocks.BooleanBlock(label='Show as a circle?', required=False))]))], label='Right'))]))], blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='testimonials', to='pages.projectpage')),
            ],
        ),
    ]
